    FRAMEWORKS

Django = robusto e bateria incluída, ideal para aplicações completas

Flask = minimalista e flexível, ótimo para APIs e microsserviços

FastAPI = moderno e rápido, ideal para APIs REST com performance alta.

   AMBIENTE VIRTUAL

com o venv o projeto pode ter sua própria versão da biblioteca sem conflitos.

/////////////////////////////////////////////////////////////////////////////////////////

COMO CRIAR O AMBIENTE VIRTUAL

comando no terminal:python -m venv venv

Ativar o ambiente virtual:

entra no windows prompt -> .\venv\Scripts\activate

Exportar pacotes instalados: pip freeze > requirements.txt

Instalar pacotes a partir de um arquivo requirements.txt: pip install -r requirements.txt

/////////////////////////////////////////////////////////////////////////////////////////////////

O QUE FAZER NO GITGNORE

  é usado para dizer ao Git quais arquivos ou pastas não devem ser rastreados/versionados

//////////////////////////////////////////////////////////////////////////////////////////////////

  BRAINSTORM
    Levantamento de ideias.

    ETAPAS
        - Definir um objetivo.
        - Reunião do grupo (diferentes pessoas na conversa).
        - Geração de ideias(Depois de um determinado tempo para pensar).
        - Registro de ideias.
        - Encorajar ideias fora do comum.
        - Seleção das melhores ideias.
        - E trabalhar nelas para torna-las mais sólidas.


QUANDO USAR O BRAINSTORM?

    No início do projeto.
    Quando há pouca clareza sobre o sistema precisa fazer.

VANTAGENS

    Estimula a criatividade e o pensamento.
    Gera um volume de ideias em pouco tempo.

DESVANTAGENS

    Pode gerar ideias irrelevantes.
    Pode virar uma conversa desorganizada.
    Pessoas mais tímidas podem ter dificuldades de participar.
    Não substitui técnicas mais estruturadas.

///////////////////////////////////////////////////////////////////////////////////////////////////////


ENTREVISTAS

    Não foque só em funcionalidades: descubra o contexto, fluxo de trabalho, limitações, integrações.
    Evite linguagem técnica, se o entrevistado não for da área.
    Registrar com cuidado: anote de forma estruturada.


    Moldar em cima do cliente o que ele precisa.
   
///////////////////////////////////////////////////////////////////////////////////////////////////////////////

PROTOTIPAGEM

    Protótipo para ter um feedback do cliente sobre o sistema.
    Criação de telas, para evitar retrabalho futuro.


ETNOGRAFIA

    Observador participante
    - Entender o contexto de uso do sistema com mais profundidade.
    - Captar comportamentos, hábitos e interações que os usuário muita das vezes não percebe.
    - Identificar necessidades não expressa verbalmente.

Exemplo prático   
    - Invés de ter respostas genéricas, eles anotam prescrições em papéis por falta de tempo.
    - Precisam acessar rapidamente históricos de pacientes em situações críticas.

Vantagens

    - Alta fidelidade das informações coletadas.
    - Revela gargalos e ineficiências que os próprios usuários podem não perceber.

Desvantagens

    - Pode ser demorada.
    - Pode ser evasiva.
    - Requer habilidade de analise e interpretação.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

WORKSHOP

  - Se baseia na dinâmica de grupo.
  - Levantar e validar requisitos do sistema.

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
METODOLOGIAS

Cascata
  - Abordagem linear e sequencial.
  

////////////////////////////////////////////////////////////////////////////////////

LISTAS - TUPLAS - CONJUNTOS - DICIONÁRIOS

    Listas: armazenar mais de um valor na variável.
        Indexada: cada item tem um índice.
        Permite dados diferentes: uma mesma listas pode conter numeros, strings, outras listas, booleanos, etc
        Delimitada por []

        ex: L = [20, "Giovani", 35.7, [30, 40, 60] ]
        
####################################################################################################################

Classes - conceitos

Classes = Modelo para criar objetos

Objeto = instância da Classe

Atributo = 
    
///////////////////////////////////////////////////////////////////

POO -  modela o mundo real em objetos em que as classes sao os modelos, dps de criar uma classe deve instanciar.

ex: classe: Carro. 
    atributo: tem 4 rodas.
    metodo: correr.

Encapsulamento = é como guardar os dados numa caixinha, e controlar como podem ser usados.
    metodos usados: Getter e Setter

Herança = quando uma classe herda de outra classe, a classe filha ganha atributos e metodos da classe pai 
    ex: Classe Animal(tem nome e idade)
        Classes filhas: Cachorro e gato.

Encapsulamento (com getters e setters)

Abstração = é como quando vc usa o controle remoto.

no codigo é = crio uma classe abstrata que define oque deve existir.
mas n diz como funciona, isso fica para as classes "filhas"(que herdam dela)


Polimorfismo = varias classes podem responder de jeito diferentes ao mesmo comando.